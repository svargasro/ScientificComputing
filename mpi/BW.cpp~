#include <mpi.h>
#include <iostream>

int main(int argc, char **argv)
{

    int M = 5;
    int tag1 = 0;
    int tag2 = 1;

    int pid, np;
    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &np);
    MPI_Comm_rank(MPI_COMM_WORLD, &pid);

    int msg1 = 0;
    for (int i = 0; i < M; i++)
    {
      if (pid == 0)
        {
            MPI_Send(&msg1, 1, MPI_INTEGER, 1, tag1, MPI_COMM_WORLD);
            MPI_Recv(&msg1, 1, MPI_INTEGER, 1, tag2, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
            std::cout << "mensaje recibido: " << msg1 << std::endl;
        }
        else if (pid == 1)
        {
            int msg2;
            MPI_Recv(&msg2, 1, MPI_INTEGER, 0, tag1, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
            msg2 += 99;
	    MPI_Send(&msg2, 1, MPI_INTEGER, 0, tag2, MPI_COMM_WORLD);
        }
    }
    MPI_Finalize();
    return 0;
}
